services:
  tortoaster:
    profiles: [ "full" ]
    build:
      dockerfile: "Dockerfile"
    ports: [ "8000:8000" ]
    environment:
      HOST: "0.0.0.0"
      PORT: "8000"
      RUST_LOG: "tortoaster=info,warn"
      DATABASE_URL: "postgres://tortoaster:password@db/tortoaster"
      OBJECT_STORAGE_ENDPOINT_URL: "http://object-store:9000/"
      OBJECT_STORAGE_ACCESS_KEY_ID: "tortoaster"
      OBJECT_STORAGE_SECRET_ACCESS_KEY: "password"
      OBJECT_STORAGE_BUCKET_THUMBNAILS: "tortoaster-thumbnails"
      OBJECT_STORAGE_BUCKET_CONTENT: "tortoaster-content"
      OBJECT_STORAGE_BUCKET_SYSTEM: "tortoaster-system"
    depends_on:
      tailwindcss:
        condition: service_completed_successfully
      db-migrate:
        condition: service_completed_successfully
      object-store-migrate:
        condition: service_completed_successfully

  tailwindcss:
    build:
      dockerfile: "Dockerfile"
      target: "tailwindcss"
    working_dir: "/app"
    command: [ "-i", "./input.css", "-o", "./static/style.css", "-m" ]
    volumes: [ ".:/app" ]
    user: "1000:1000"

  db:
    image: postgres:16.2
    ports: [ "5432:5432" ]
    environment:
      POSTGRES_USER: "tortoaster"
      POSTGRES_PASSWORD: "password"
    healthcheck:
      test: "pg_isready"
      interval: 1s
      retries: 10

  db-migrate:
    build:
      dockerfile: "sqlx.Dockerfile"
    working_dir: "/app"
    command: [ "migrate", "run", "--source", "migrations", "--source", "fixtures" ]
    volumes:
      - "./migrations:/app/migrations"
      - "./fixtures:/app/fixtures"
    environment:
      DATABASE_URL: "postgres://tortoaster:password@db/tortoaster"
    depends_on:
      db:
        condition: service_healthy

  object-store:
    image: quay.io/minio/minio
    command: "server /data --address 0.0.0.0:9000 --console-address 0.0.0.0:9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_HOST: "0.0.0.0"
      MINIO_ROOT_USER: "tortoaster"
      MINIO_ROOT_PASSWORD: "password"
    healthcheck:
      test: "curl -I http://localhost:9000/minio/health/live"
      interval: 1s
      retries: 10

  object-store-migrate:
    image: quay.io/minio/mc
    volumes:
      - "./bucket_data/content:/app/content"
      - "./bucket_data/thumbnails:/app/thumbnails"
      - "./bucket_data/system:/app/system"
    depends_on:
      object-store:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c " \
        /usr/bin/mc alias set myminio http://object-store:9000 tortoaster password && \
        /usr/bin/mc mb --ignore-existing --region "eu-central-1" --with-versioning myminio/tortoaster-content && \
        /usr/bin/mc mb --ignore-existing --region "eu-central-1" myminio/tortoaster-thumbnails && \
        /usr/bin/mc mb --ignore-existing --region "eu-central-1" --with-versioning myminio/tortoaster-system && \
        /usr/bin/mc anonymous set public myminio/tortoaster-content && \
        /usr/bin/mc anonymous set public myminio/tortoaster-thumbnails && \
        /usr/bin/mc anonymous set public myminio/tortoaster-system && \
        /usr/bin/mc mirror --overwrite /app/content myminio/tortoaster-content && \
        /usr/bin/mc mirror --overwrite /app/thumbnails myminio/tortoaster-thumbnails && \
        /usr/bin/mc mirror --overwrite /app/system myminio/tortoaster-system \
      "
