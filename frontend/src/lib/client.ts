/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/projects": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["list_projects"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/projects/{id}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["get_project"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    Page_ProjectPreview: {
      has_next: boolean;
      has_previous: boolean;
      items: {
        /** Format: date-time */
        datePosted: string;
        id: string;
        name: string;
        preview: string;
        /** Format: uuid */
        thumbnailId: string;
      }[];
    };
    Project: {
      /** Format: date-time */
      datePosted: string;
      id: string;
      name: string;
      projectUrl?: string | null;
      /** Format: uuid */
      thumbnailId: string;
    };
    ProjectPreview: {
      /** Format: date-time */
      datePosted: string;
      id: string;
      name: string;
      preview: string;
      /** Format: uuid */
      thumbnailId: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type PageProjectPreview = components["schemas"]["Page_ProjectPreview"];
export type Project = components["schemas"]["Project"];
export type ProjectPreview = components["schemas"]["ProjectPreview"];
export type $defs = Record<string, never>;
export interface operations {
  list_projects: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Comments found successfully */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Page_ProjectPreview"];
        };
      };
    };
  };
  get_project: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description ID of project to fetch */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Project found successfully */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Project"];
        };
      };
    };
  };
}
